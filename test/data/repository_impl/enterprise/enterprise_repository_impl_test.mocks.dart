// Mocks generated by Mockito 5.0.15 from annotations
// in ioasys_app/test/data/repository_impl/enterprise/enterprise_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:ioasys_app/data/cache/enterprise/cache_data_source/enterprise_cache_data_source.dart'
    as _i5;
import 'package:ioasys_app/data/remote/enterprise/remote_data_source/enterprise_remote_data_source.dart'
    as _i3;
import 'package:ioasys_app/domain/model/enterprise/enterprise_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEnterpriseModel_0 extends _i1.Fake implements _i2.EnterpriseModel {}

/// A class which mocks [EnterpriseRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnterpriseRemoteDataSource extends _i1.Mock
    implements _i3.EnterpriseRemoteDataSource {
  MockEnterpriseRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.EnterpriseModel>> getEnterpriseList(
          String? enterpriseName,
          String? accessToken,
          String? uid,
          String? client) =>
      (super.noSuchMethod(
          Invocation.method(
              #getEnterpriseList, [enterpriseName, accessToken, uid, client]),
          returnValue: Future<List<_i2.EnterpriseModel>>.value(
              <_i2.EnterpriseModel>[])) as _i4
          .Future<List<_i2.EnterpriseModel>>);
  @override
  _i4.Future<_i2.EnterpriseModel> getEnterprise(
          int? id, String? accessToken, String? uid, String? client) =>
      (super.noSuchMethod(
              Invocation.method(#getEnterprise, [id, accessToken, uid, client]),
              returnValue:
                  Future<_i2.EnterpriseModel>.value(_FakeEnterpriseModel_0()))
          as _i4.Future<_i2.EnterpriseModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [EnterpriseCacheDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnterpriseCacheDataSource extends _i1.Mock
    implements _i5.EnterpriseCacheDataSource {
  MockEnterpriseCacheDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.EnterpriseModel> getEnterprise(int? id) =>
      (super.noSuchMethod(Invocation.method(#getEnterprise, [id]),
              returnValue:
                  Future<_i2.EnterpriseModel>.value(_FakeEnterpriseModel_0()))
          as _i4.Future<_i2.EnterpriseModel>);
  @override
  _i4.Future<void> saveEnterprise(_i2.EnterpriseModel? enterpriseModel) =>
      (super.noSuchMethod(Invocation.method(#saveEnterprise, [enterpriseModel]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
