// Mocks generated by Mockito 5.0.15 from annotations
// in ioasys_app/test/presentation/enterprise/enterprise_list/main_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:ioasys_app/domain/model/enterprise/enterprise_model.dart'
    as _i5;
import 'package:ioasys_app/domain/repository/enterprise/enterprise_repository.dart'
    as _i2;
import 'package:ioasys_app/domain/use_case/get_enterprise_list_use_case.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEnterpriseRepository_0 extends _i1.Fake
    implements _i2.EnterpriseRepository {}

/// A class which mocks [GetEnterpriseListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEnterpriseListUseCase extends _i1.Mock
    implements _i3.GetEnterpriseListUseCase {
  MockGetEnterpriseListUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EnterpriseRepository get enterpriseRepository => (super.noSuchMethod(
      Invocation.getter(#enterpriseRepository),
      returnValue: _FakeEnterpriseRepository_0()) as _i2.EnterpriseRepository);
  @override
  _i4.Future<List<_i5.EnterpriseModel>> getRawFuture(
          {_i3.GetEnterpriseListUseCaseParams? params}) =>
      (super.noSuchMethod(
              Invocation.method(#getRawFuture, [], {#params: params}),
              returnValue: Future<List<_i5.EnterpriseModel>>.value(
                  <_i5.EnterpriseModel>[]))
          as _i4.Future<List<_i5.EnterpriseModel>>);
  @override
  _i4.Future<List<_i5.EnterpriseModel>> getFuture(
          {_i3.GetEnterpriseListUseCaseParams? params}) =>
      (super.noSuchMethod(Invocation.method(#getFuture, [], {#params: params}),
              returnValue: Future<List<_i5.EnterpriseModel>>.value(
                  <_i5.EnterpriseModel>[]))
          as _i4.Future<List<_i5.EnterpriseModel>>);
  @override
  String toString() => super.toString();
}
