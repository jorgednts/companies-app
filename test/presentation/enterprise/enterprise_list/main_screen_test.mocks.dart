// Mocks generated by Mockito 5.0.15 from annotations
// in ioasys_app/test/presentation/enterprise/enterprise_list/main_screen_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:ioasys_app/domain/use_case/get_enterprise_list_use_case.dart'
    as _i2;
import 'package:ioasys_app/presentation/enterprise/enterprise_list/main_bloc.dart'
    as _i3;
import 'package:ioasys_app/presentation/enterprise/enterprise_list/main_view_state.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeGetEnterpriseListUseCase_0 extends _i1.Fake
    implements _i2.GetEnterpriseListUseCase {}

class _FakeSink_1<T> extends _i1.Fake implements Sink<T> {}

/// A class which mocks [MainBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainBloc extends _i1.Mock implements _i3.MainBloc {
  MockMainBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetEnterpriseListUseCase get getEnterpriseListUseCase =>
      (super.noSuchMethod(Invocation.getter(#getEnterpriseListUseCase),
              returnValue: _FakeGetEnterpriseListUseCase_0())
          as _i2.GetEnterpriseListUseCase);
  @override
  _i4.Stream<_i5.MainViewState> get mainViewState =>
      (super.noSuchMethod(Invocation.getter(#mainViewState),
              returnValue: Stream<_i5.MainViewState>.empty())
          as _i4.Stream<_i5.MainViewState>);
  @override
  Sink<_i5.MainViewState> get mainViewStateInput =>
      (super.noSuchMethod(Invocation.getter(#mainViewStateInput),
              returnValue: _FakeSink_1<_i5.MainViewState>())
          as Sink<_i5.MainViewState>);
  @override
  _i4.Stream<_i5.MainViewState> getEnterpriseList(String? enterpriseName,
          String? accessToken, String? uid, String? client) =>
      (super.noSuchMethod(
              Invocation.method(#getEnterpriseList,
                  [enterpriseName, accessToken, uid, client]),
              returnValue: Stream<_i5.MainViewState>.empty())
          as _i4.Stream<_i5.MainViewState>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
